plugins {
    //id 'net.minecrell.licenser' version '0.3'
    id 'org.ajoberstar.grgit' version '2.3.0'
    id 'com.github.johnrengelman.shadow' version '2.0.4'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'maven-publish'

group = 'de.oceanlabs.mcp'
version = gitVersion()
targetCompatibility = sourceCompatibility = compileJava.targetCompatibility = compileJava.sourceCompatibility = '1.8'

ext {
    CHANGELOG = file("build/${project.name}-${project.version}-changelog.txt")
}

repositories {
    mavenCentral()
}

def gitVersion() {
    return "3.4.1-SNAPSHOT";
}

jar {
    manifest.attributes('Main-Class': 'de.oceanlabs.mcp.mcinjector.MCInjector')
    manifest.attributes('Implementation-Version': project.version)
}
shadowJar {
    classifier 'fatjar'
    manifest.attributes('Main-Class': 'de.oceanlabs.mcp.mcinjector.MCInjector')
    manifest.attributes('Implementation-Version': project.version)
}

task sourceJar(type: Jar) {
    classifier 'sources'
    from sourceSets.main.allJava
}

artifacts {
    archives jar
    archives shadowJar
    archives sourceJar
}

def changelog = file('build/changelog.txt')
def changelog_named = CHANGELOG
if (changelog.exists()) {
    CHANGELOG.write(changelog.text)
    artifacts.archives CHANGELOG
}

dependencies {
    compile 'org.ow2.asm:asm:6.1-beta2'
    compile 'org.ow2.asm:asm-tree:6.1-beta2'
    compile 'net.sf.jopt-simple:jopt-simple:4.9'
    compile 'com.google.code.gson:gson:2.2.4'
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            artifact shadowJar
            artifact tasks.sourceJar
	    if (CHANGELOG.exists()) {
                artifact source: CHANGELOG, classifier: 'changelog'
	    }
	    description = 'Utility for cleaning up Minecraft jar files for decompolation'
        }
    }
}
