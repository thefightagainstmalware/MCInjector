plugins {
    //id 'net.minecrell.licenser' version '0.3'
    id 'org.ajoberstar.grgit' version '2.3.0'
    id 'com.github.johnrengelman.shadow' version '2.0.4'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'maven-publish'

group = 'de.oceanlabs.mcp'
version = gitVersion()
targetCompatibility = sourceCompatibility = compileJava.targetCompatibility = compileJava.sourceCompatibility = '1.8'

ext {
    CHANGELOG = file("build/${project.name}-${project.version}-changelog.txt")
}

repositories {
    mavenCentral()
}

def gitVersion() {
    def desc = grgit.describe(longDescr: true).split('-') as List
    def hash = desc.remove(desc.size() - 1)
    def offset = desc.remove(desc.size() - 1)
    def tag = desc.join('-')
    def branch = grgit.branch.current().name
    return "${tag}.${offset}${t -> if (branch != 'main') t << '-' + branch}"
}

jar {
    manifest.attributes('Main-Class': 'de.oceanlabs.mcp.mcinjector.MCInjector')
    manifest.attributes('Implementation-Version': project.version)
}
shadowJar {
    classifier 'fatjar'
    manifest.attributes('Main-Class': 'de.oceanlabs.mcp.mcinjector.MCInjector')
    manifest.attributes('Implementation-Version': project.version)
}

task sourceJar(type: Jar) {
    classifier 'sources'
    from sourceSets.main.allJava
}

artifacts {
    archives jar
    archives shadowJar
    archives sourceJar
}

def changelog = file('build/changelog.txt')
def changelog_named = CHANGELOG
if (changelog.exists()) {
    CHANGELOG.write(changelog.text)
    artifacts.archives CHANGELOG
}

dependencies {
    compile 'org.ow2.asm:asm:6.1-beta2'
    compile 'org.ow2.asm:asm-tree:6.1-beta2'
    compile 'net.sf.jopt-simple:jopt-simple:4.9'
    compile 'com.google.code.gson:gson:2.2.4'
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            artifact shadowJar
            artifact tasks.sourceJar

            groupId = 'org.company'
            artifactId = 'sample'
            version = "0.9-SNAPSHOT"
            from components.java
	    if (CHANGELOG.exists())
                artifact source: CHANGELOG, classifier: 'changelog'
            
	    name = 'MCInjector'
                description = 'Utility for cleaning up Minecraft jar files for decompolation'
                url = 'https://github.com/ModCoderPack/MCInjector'
                scm {
                    url = 'https://github.com/ModCoderPack/MCInjector'
                    connection = 'scm:git:git://github.com/ModCoderPack/MCInjector.git'
                    developerConnection = 'scm:git:git@github.com:ModCoderPack/MCInjector.git'
                }
                issueManagement {
                    system = 'github'
                    url = 'https://github.com/ModCoderPack/MCInjector/issues'
                }

                developers {
                    developer {
                        id = 'Fesh0r'
                        name = 'Fesh0r'
                    }
                    developer {
                        id = 'Searge'
                        name = 'Searge'
                    }
                    developer {
                        id = 'cpw'
                        name = 'cpw'
                    }
                    developer {
                        id = 'LexManos'
                        name = 'Lex Manos'
                    }
                }

                licenses { //TODO: Ask the guys if I can license LGPL2.1 like everything else.
                    license {
                        name = ''
                        url = ''	
                        distribution = 'repo'
                    }
                }

        }
    }
}